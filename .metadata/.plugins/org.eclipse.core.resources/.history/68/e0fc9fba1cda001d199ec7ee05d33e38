package com.abbymcculloch.donationuser.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;

import com.abbymcculloch.donationuser.models.Donation;
import com.abbymcculloch.donationuser.models.User;
import com.abbymcculloch.donationuser.services.DonationService;
import com.abbymcculloch.donationuser.services.UserService;

import jakarta.validation.Valid;

@Controller
public class HomeController {
	
@Autowired
private DonationService donationService;

@Autowired
private UserService userService;

////READ ALL -----------------
//
//@GetMapping("/donations")
//
//public String donationBoard(Model model) {
//	List<Donation> donationList = donationService.allDonations();
//	model.addAttribute("donationList", donationList);
//	return "dashboard.jsp";
//}
//
////READ ONE -----------------
//
//@GetMapping("/donations/{id}")
//public String donationDetails(@PathVariable("id")Long id, Model model) {
//	Donation oneDonation = donationService.findDonation(id);
//	model.addAttribute("oneDonation", oneDonation);
//	return "details.jsp";
//}


//CREATE USER--------------------

//render create page

@GetMapping("/users/new")
public String renderCreateUserForm(
		@ModelAttribute("newUser")User newUser) {
	return "createUserPage.jsp";
}

//process create

@PostMapping("users/new")
public String processCreateUserForm(
		@Valid @ModelAttribute("newUser") User newUser, 
		BindingResult result
		) {
	if(result.hasErrors()) {
		return "createUserPage.jsp";
	}
	userService.createUser(newUser);
	return "redirect:/donations";
}

//CREATE DONATION--------------------

//render create page

@GetMapping("/donations/new")
public String renderCreateDonationForm(Model model) {
	Donation newDonation = new Donation();
	model.addAttribute("newDonation", newDonation);
	return "createDonationPage.jsp";
}

//process create

@PostMapping("donations/new")
public String processCreateDonationForm(
		@Valid @ModelAttribute("newDonation") Donation newDonation, 
		BindingResult result
		) {
	if(result.hasErrors()) {
		return "createDonationPage.jsp";
	}
	donationService.createDonation(newDonation);
	return "redirect:/donations";
}

//EDIT------------------------

//Render edit form
@GetMapping("/donations/edit/{id}")
public String renderEditForm(
		@PathVariable("id")Long id,
		Model model
		) {
	Donation oneDonation = donationService.findDonation(id);
	model.addAttribute("oneDonation", oneDonation);
	return "editPage.jsp";
}

//process edit form
@PutMapping("/donations/edit/{id}")
public String processEditForm(
		@PathVariable("id")Long id,
		@Valid @ModelAttribute("oneDonation") Donation oneDonation,
		BindingResult result
		) {
	if(result.hasErrors()) {
		return "editPage.jsp";
	}
	else {
		donationService.updateDonation(oneDonation);
		return "redirect:/donations";
	}
}


//DELETE--------------------

@DeleteMapping("/donations/{id}")
public String deleteDonation(@PathVariable("id")Long id) {
	donationService.removeDonation(id);
	return "redirect:/donations";
}



}
